Parameters: 
    EnvName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: "uda-eks"
Mappings:
  PartitionMap:
    aws:
      EC2ServicePrincipal: "ec2.amazonaws.com"

Resources:

    eksSecurityGroup:
           Type: AWS::EC2::SecurityGroup
           Properties:
              GroupDescription: Cluster communication with worker nodes
              VpcId: 
                Fn::ImportValue:
                  !Sub "${EnvName}-VPCID"
              Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-SG
     
    eksIAMRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                  - eks.amazonaws.com
                Action:
                - 'sts:AssumeRole'
          RoleName: EKSClusterRole
          ManagedPolicyArns:
            - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy


    eksCluster:
        Type: AWS::EKS::Cluster
        Properties:
          Name: uda-eks
          Version: 1.21
          RoleArn:
            "Fn::GetAtt": ["eksIAMRole", "Arn"]
          ResourcesVpcConfig:
            SecurityGroupIds:
              - !Ref eksSecurityGroup
            SubnetIds:
              - Fn::ImportValue: !Sub "${EnvName}-PUB1-SN"
              - Fn::ImportValue: !Sub "${EnvName}-PUB2-SN"
        DependsOn: [eksIAMRole, eksSecurityGroup]

    eksNodeInstanceRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - !FindInMap [PartitionMap, !Ref "AWS::Partition", EC2ServicePrincipal]
                Action:
                  - "sts:AssumeRole"
          ManagedPolicyArns:
            - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
            - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
            - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
          Path: /


    eksNodeGroup:
        Type: AWS::EKS::Nodegroup
        Properties:
          ClusterName: uda-eks
          NodeRole: 
            "Fn::GetAtt": ["eksNodeInstanceRole", "Arn"]
          AmiType: AL2_x86_64
          InstanceTypes: 
            - t3.medium
          NodegroupName: NodeGroup01
          RemoteAccess:
            Ec2SshKey: uda-cicd
          ScalingConfig:
            MinSize: 1
            DesiredSize: 1
            MaxSize: 1
          Labels:
            Project: uda-eks
          Subnets:
              - Fn::ImportValue: !Sub "${EnvName}-PUB1-SN"
              - Fn::ImportValue: !Sub "${EnvName}-PUB2-SN"
        DependsOn: [eksCluster, eksNodeInstanceRole]

